{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yunshine/Code/yunshine/Next-101/Fetching & Server API/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    _classCallCheck(this, Index);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log('running index page...');\n      var posts = this.props.posts;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"the index page...\"), __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, posts.map(function (post) {\n        return __jsx(\"li\", {\n          key: post.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, __jsx(Link, {\n          href: \"/post\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        }, post.title));\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('https://jsonplaceholder.typicode.com/users/1/posts');\n\n              case 2:\n                res = _context.sent;\n                data = res.data;\n                return _context.abrupt(\"return\", {\n                  posts: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(Component); // import axios from 'axios';\n// const Index = ({ posts }) => {\n//   //   console.log('running index page...');\n//   //   console.log(posts);\n//   return (\n//     <div>\n//       <h1>the index page...</h1>\n//       <ul>\n//         {posts.map((post) => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// Index.getInitialProps = async (ctx) => {\n//   const res = await axios.get(\n//     'https://jsonplaceholder.typicode.com/users/1/posts'\n//   );\n//   const { data } = res;\n//   console.log(data[0]);\n//   console.log('Get initialsdkjfalkdjflaskd');\n//   return { posts: data };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/yunshine/Code/yunshine/Next-101/Fetching & Server API/pages/index.js"],"names":["React","Component","Link","axios","Index","props","console","log","posts","map","post","id","title","ctx","get","res","data"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAUQ;AAAA;;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AADO,UAECC,KAFD,GAEW,KAAKH,KAFhB,CAECG,KAFD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,eACT;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,IAAI,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBD,IAAI,CAACE,KAA3B,CADF,CADS;AAAA,OAAV,CADH,CAFF,CADF;AAYD;;;;uGAvB4BC,G;;;;;;;uBACTV,KAAK,CAACW,GAAN,CAChB,oDADgB,C;;;AAAZC,gBAAAA,G;AAGEC,gBAAAA,I,GAASD,G,CAATC,I;iDACD;AAAER,kBAAAA,KAAK,EAAEQ;AAAT,iB;;;;;;;;;;;;;;;;;;;EAVSf,S,GA+BpB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeG,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static async getInitialProps(ctx) {\n    const res = await axios.get(\n      'https://jsonplaceholder.typicode.com/users/1/posts'\n    );\n    const { data } = res;\n    return { posts: data };\n  }\n\n  render() {\n    console.log('running index page...');\n    const { posts } = this.props;\n    return (\n      <div>\n        <h1>the index page...</h1>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.id}>\n              <Link href={`/post`}>{post.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\n// import axios from 'axios';\n\n// const Index = ({ posts }) => {\n//   //   console.log('running index page...');\n//   //   console.log(posts);\n//   return (\n//     <div>\n//       <h1>the index page...</h1>\n//       <ul>\n//         {posts.map((post) => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// Index.getInitialProps = async (ctx) => {\n//   const res = await axios.get(\n//     'https://jsonplaceholder.typicode.com/users/1/posts'\n//   );\n//   const { data } = res;\n//   console.log(data[0]);\n//   console.log('Get initialsdkjfalkdjflaskd');\n//   return { posts: data };\n// };\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}