{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yunshine/Code/yunshine/Next-101/Fetching & Server API/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 9\n        }\n      }, \"the index page...\"));\n    }\n  }]);\n\n  return Index;\n}(Component); // const Index = () => {\n//   console.log('running index...');\n//   return (\n//     <div>\n//       <h1>the index page...</h1>\n//     </div>\n//   );\n// };\n\n\nexport default Index; // npm run start    =>  this will start the server; then use localhost3000...","map":{"version":3,"sources":["/Users/yunshine/Code/yunshine/Next-101/Fetching & Server API/pages/index.js"],"names":["React","Component","Index"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,K;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF;AAKD;;;;EAPiBD,S,GAUpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeC,KAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\n\nclass Index extends Component {\n  render() {\n    return (\n      <div>\n        <h1>the index page...</h1>\n      </div>\n    );\n  }\n}\n\n// const Index = () => {\n//   console.log('running index...');\n//   return (\n//     <div>\n//       <h1>the index page...</h1>\n//     </div>\n//   );\n// };\n\nexport default Index;\n\n// npm run start    =>  this will start the server; then use localhost3000...\n"]},"metadata":{},"sourceType":"module"}