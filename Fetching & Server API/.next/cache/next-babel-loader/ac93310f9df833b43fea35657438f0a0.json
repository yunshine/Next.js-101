{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yunshine/Code/yunshine/Next-101/Fetching & Server API/pages/post.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withRouter } from 'next/router';\nimport axios from 'axios';\n\nvar Post = function Post(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, \"Post Page. These are the comments for post #\", props.id));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var query, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query;\n            _context.next = 3;\n            return axios.get('https://jsonplaceholder.typicode.com/comments?postId=1');\n\n          case 3:\n            res = _context.sent;\n            data = res.data;\n            console.log(data[0]);\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, query), {}, {\n              comments: data\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Post; //   const Post = withRouter((props) => (\n//     <h1>Post Page. You are looking at post #{props.router.query.id}</h1>\n//   ));\n// export default withRouter(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/yunshine/Code/yunshine/Next-101/Fetching & Server API/pages/post.js"],"names":["withRouter","axios","Post","props","id","getInitialProps","query","get","res","data","console","log","comments"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAiDA,KAAK,CAACC,EAAvD,CADF,CADW;AAAA,CAAb;;KAAMF,I;;AAKNA,IAAI,CAACG,eAAL;AAAA,uEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,QAASA,KAAT;AAAA;AAAA,mBACHL,KAAK,CAACM,GAAN,CAChB,wDADgB,CADG;;AAAA;AACfC,YAAAA,GADe;AAIbC,YAAAA,IAJa,GAIJD,GAJI,CAIbC,IAJa;AAKrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB;AALqB,6EAMTH,KANS;AAMFM,cAAAA,QAAQ,EAAEH;AANR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeP,IAAf,C,CAEA;AACA;AACA;AAEA","sourcesContent":["import { withRouter } from 'next/router';\nimport axios from 'axios';\n\nconst Post = (props) => (\n  <div>\n    <h1>Post Page. These are the comments for post #{props.id}</h1>\n  </div>\n);\nPost.getInitialProps = async ({ query }) => {\n  const res = await axios.get(\n    'https://jsonplaceholder.typicode.com/comments?postId=1'\n  );\n  const { data } = res;\n  console.log(data[0]);\n  return { ...query, comments: data };\n};\n\nexport default Post;\n\n//   const Post = withRouter((props) => (\n//     <h1>Post Page. You are looking at post #{props.router.query.id}</h1>\n//   ));\n\n// export default withRouter(Post);\n"]},"metadata":{},"sourceType":"module"}